@model ProductEditModel
@{
    Layout = "_AdminLayout";
}

<div class="row">
    <div class="col-12">
        <div class="card-body shadow">
            <div asp-validation-summary="All" class="text-danger"></div>
            <form method="post" asp-controller="Product" asp-action="Edit" enctype="multipart/form-data" class="p-4">
                <div class="row">
                    <div class="col-md-8">
                        <div class="mb-3">
                            <label asp-for="ProductName" class="form-label"></label>
                            <input asp-for="ProductName" class="form-control shadow-sm" id="ProductName" />
                            <span asp-validation-for="ProductName" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Description" class="form-label"></label>
                            <textarea asp-for="Description" id="editor" rows="4" class="form-control shadow-sm"></textarea>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label asp-for="Price" class="form-label"></label>
                                <div class="input-group shadow-sm">
                                    <input asp-for="Price" class="form-control" id="Price" type="number" step="0.01" min="10" max="300000" />
                                    <span class="input-group-text">TL</span> 
                                </div>
                                <span asp-validation-for="Price" class="text-danger"></span>
                            </div>


                            <div class="col-md-6">
                                <label asp-for="Stock" class="form-label"></label>
                                <input asp-for="Stock" class="form-control shadow-sm" id="Stock" />
                                <span asp-validation-for="Stock" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-6 d-flex gap-5">
                                <div class="d-flex align-items-center gap-3 mt-2">
                                    <label asp-for="IsActive" class="form-label"></label>
                                    <div class="form-check form-switch" style="transform: scale(1.5);">
                                        <input class="form-check-input" role="switch" asp-for="IsActive" id="IsActive" />
                                    </div>
                                </div>

                                <div class="d-flex align-items-center gap-3 mt-2">
                                    <label asp-for="IsHome" class="form-label"></label>
                                    <div class="form-check form-switch" style="transform: scale(1.5);">
                                        <input class="form-check-input" role="switch" asp-for="IsHome" id="IsHome" />
                                    </div>
                                </div>
                            </div>


                           <div class="row mb-3">
                     <div class="mb-3">
                    <label>Kategoriler</label>
                     <div class="dropdown">
                        <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="categoryDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                            Kategori Seçiniz
                        </button>
                        <ul class="dropdown-menu p-3" aria-labelledby="categoryDropdown" style="max-height: 200px; overflow-y: auto;">
                            @foreach (var category in ViewBag.Categories as IEnumerable<SelectListItem>)
                            {
                                <li>
                                    <div class="form-check">
                                        <input class="form-check-input category-checkbox" type="checkbox" 
                                            name="CategoryIds" value="@category.Value" id="cat_@category.Value" />
                                        <label class="form-check-label" for="cat_@category.Value">@category.Text</label>
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                <span asp-validation-for="CategoryIds" class="text-danger"></span>
                </div>

                <div class="mt-3">
                    <label>Seçilen Kategoriler:</label>
                    <div id="selectedCategories" class="d-flex flex-wrap gap-2">
                    </div>
                </div>

</div>      

</div>
            <div class="mt-2" id="selectedCategories" class="d-flex flex-wrap gap-2"></div>
        </div>
  
        

        <div class="col-md-4">
            <label asp-for="Image" class="form-label">Görsel</label>
            <div class="text-center p-3 border rounded shadow-sm bg-light">
                <img id="imagePreview"
                     src="@(string.IsNullOrEmpty(Model.Image) ? "https://placehold.co/300x200" : Url.Content("~/img/" + Model.Image))"
                     class="img-thumbnail mb-2"
                     style="max-height: 200px;"
                     alt="Görsel Önizleme" />

                <input type="hidden" asp-for="Image" />
                <input type="file" asp-for="ImageFile" class="form-control shadow-sm" accept="image/*" onchange="previewImage(event)" />
                <span asp-validation-for="ImageFile" class="text-danger"></span>
            </div>

            <div class="text-end mt-4">
                <button type="submit" class="btn btn-primary w-100 shadow-sm">Kaydet</button>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        function previewImage(event) {
            const input = event.target;
            const preview = document.getElementById('imagePreview');

            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    preview.src = e.target.result;
                };
                reader.readAsDataURL(input.files[0]);
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            const checkboxes = document.querySelectorAll('.category-checkbox');
            const selectedContainer = document.getElementById('selectedCategories');

            function createCategoryBadge(id, text) {
                const badge = document.createElement('div');
                badge.className = 'badge bg-primary d-flex align-items-center me-2 mb-2';
                badge.style.padding = '0.5em 0.75em';
                badge.style.borderRadius = '0.5rem';

                const span = document.createElement('span');
                span.textContent = text;

                const btn = document.createElement('button');
                btn.type = 'button';
                btn.className = 'btn-close btn-close-white btn-sm ms-2';
                btn.setAttribute('aria-label', 'Remove');
                btn.addEventListener('click', () => {
                    const checkbox = document.getElementById(id);
                    if (checkbox) {
                        checkbox.checked = false;
                    }
                    badge.remove();
                });

                badge.appendChild(span);
                badge.appendChild(btn);
                return badge;
            }

            function updateSelectedCategories() {
                selectedContainer.innerHTML = '';
                checkboxes.forEach(chk => {
                    if (chk.checked) {
                        const badge = createCategoryBadge(chk.id, chk.nextElementSibling.textContent);
                        selectedContainer.appendChild(badge);
                    }
                });
            }

            const selectedIds = @Html.Raw(Json.Serialize(Model.CategoryIds ?? new List<int>()));

            checkboxes.forEach(chk => {
                if (selectedIds.includes(parseInt(chk.value))) {
                    chk.checked = true;
                }
            });

            updateSelectedCategories();
            checkboxes.forEach(chk => chk.addEventListener('change', updateSelectedCategories));
        });
    </script>
}
